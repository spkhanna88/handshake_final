{"ast":null,"code":"var _jsxFileName = \"/Users/surbhi/Documents/STUDY/CMPE273/lab1-Handshake_portal-work6/frontend/src/Signin/Components/Signinform.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport swal from \"sweetalert\";\nimport axios from \"axios\";\nimport { Redirect } from \"react-router-dom\";\nimport cookie from \"react-cookies\";\nimport SigninAction from \"../../Actions/SigninAction\";\nimport TextFieldGroup from \"./TextFieldGroup\";\nimport validateSigninInput from \"./validateSigninInput\";\n\nclass Signinform extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleOptionChange = changeEvent => {\n      this.setState({\n        selectedOption: changeEvent.target.value\n      });\n    };\n\n    this.state = {\n      identifier: \"\",\n      password: \"\",\n      errors: {},\n      isLoading: false,\n      selectedOption: \"company\",\n      authFlag: false,\n      redirector: null\n    };\n    this.onSubmit = this.onSubmit.bind(this);\n    this.onChange = this.onChange.bind(this);\n    this.handleOptionChange = this.handleOptionChange.bind(this); //constructor\n  } //Call the Will Mount to set the auth Flag to false\n\n\n  componentWillMount() {\n    this.setState({\n      authFlag: false\n    });\n\n    if (cookie) {\n      cookie.remove(\"cookie\", {\n        path: \"/\"\n      });\n      localStorage.removeItem(\"email\");\n      localStorage.removeItem(\"role\");\n    }\n  }\n\n  isValid() {\n    let {\n      errors,\n      isValid\n    } = validateSigninInput(this.state);\n\n    if (!isValid) {\n      this.setState(({\n        errors\n      } = validateSigninInput(this.state)));\n    }\n\n    return isValid;\n  }\n\n  onSubmit(event) {\n    var headers = new Headers();\n    event.preventDefault();\n\n    if (this.isValid()) {\n      axios.defaults.withCredentials = true;\n      this.setState({\n        errors: {},\n        isLoading: true\n      });\n      this.props.SigninAction(this.state).then(data => {\n        this.setState({\n          authFlag: true\n        });\n        localStorage.setItem(\"email\", data.data.email);\n\n        if (data.data.selectedOption === \"student\") {\n          localStorage.setItem(\"role\", \"student\");\n          localStorage.setItem(\"major\", data.data.major);\n          swal(\"\", \"Sign-in Successful\", \"success\").then(() => {\n            this.setState({\n              redirector: React.createElement(Redirect, {\n                to: {\n                  pathname: \"/StudentDashboard/Main/StudentJobSearch/Pages/StudentJobSearch\"\n                },\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 70\n                },\n                __self: this\n              })\n            });\n          });\n        } else {\n          swal(\"\", \"Sign-in Successful\", \"success\").then(() => {\n            localStorage.setItem(\"role\", \"company\");\n            this.setState({\n              redirector: React.createElement(Redirect, {\n                to: {\n                  pathname: \"/CompanyDashboard/CompDashboard/Pages/CompDashboard\"\n                },\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 84\n                },\n                __self: this\n              })\n            });\n          });\n        }\n      }) //then\n      .catch(error => {\n        if (error.response.data.problem === \"password\") {\n          this.setState({\n            authFlag: false\n          });\n          swal(\"Error\", \"Wrong Password!!!Try again\", \"error\").then(() => {\n            //window.location = \"/Signin/Pages/Signin\";\n            this.setState({\n              redirector: React.createElement(Redirect, {\n                to: {\n                  pathname: \"/Signin/Pages/Signin\"\n                },\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 105\n                },\n                __self: this\n              })\n            });\n          });\n        } else if (error.response.data.problem === \"username\") {\n          this.setState({\n            authFlag: false\n          });\n          swal(\"Error\", \"Username is incorrect!!! Try again\", \"error\").then(() => {\n            //window.location = \"/Signin/Pages/Signin\";\n            this.setState({\n              redirector: React.createElement(Redirect, {\n                to: {\n                  pathname: \"/Signin/Pages/Signin\"\n                },\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 122\n                },\n                __self: this\n              })\n            });\n          });\n        } else {\n          this.setState({\n            authFlag: false\n          });\n          swal(\"Error\", \"Some Error Occured.. Please try again\", \"error\").then(() => {\n            window.location = \"/Signin/Pages/Signin\";\n          });\n        }\n      }); //catch\n      //if\n    } //function\n\n  }\n\n  onChange(event) {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  }\n\n  render() {\n    let redirectVar = null;\n    let {\n      errors,\n      identifier,\n      password,\n      isLoading\n    } = this.state;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, this.state.redirector, React.createElement(\"form\", {\n      onSubmit: this.onSubmit,\n      className: \"login\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      align: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, \" Sign-In \"), React.createElement(TextFieldGroup, {\n      field: \"identifier\",\n      label: \"Username/Email\",\n      value: identifier,\n      error: errors.identifier,\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }), React.createElement(TextFieldGroup, {\n      field: \"password\",\n      label: \"Password\",\n      value: password,\n      error: errors.password,\n      onChange: this.onChange,\n      type: \"password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      disabled: this.state.isLoading,\n      type: \"submit\",\n      name: \"Submit\",\n      className: \"btn btn-primary btn-lg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }, \"Login\"))), React.createElement(\"div\", {\n      className: \"form-check\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"radio\",\n      id: \"company\",\n      name: \"loginuser\",\n      value: \"company\",\n      className: \"form-check-input\",\n      checked: this.state.selectedOption === \"company\",\n      onChange: this.handleOptionChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      for: \"company\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    }, \"Company Login\"), React.createElement(\"input\", {\n      type: \"radio\",\n      id: \"student\",\n      name: \"loginuser\",\n      value: \"student\",\n      className: \"form-check-input\",\n      checked: this.state.selectedOption === \"student\",\n      onChange: this.handleOptionChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      for: \"student\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218\n      },\n      __self: this\n    }, \"Student Login\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219\n      },\n      __self: this\n    })))) //return\n    ; //render\n  } //class\n\n\n}\n\nexport default connect(null, {\n  SigninAction\n})(Signinform);","map":{"version":3,"sources":["/Users/surbhi/Documents/STUDY/CMPE273/lab1-Handshake_portal-work6/frontend/src/Signin/Components/Signinform.js"],"names":["React","connect","swal","axios","Redirect","cookie","SigninAction","TextFieldGroup","validateSigninInput","Signinform","Component","constructor","props","handleOptionChange","changeEvent","setState","selectedOption","target","value","state","identifier","password","errors","isLoading","authFlag","redirector","onSubmit","bind","onChange","componentWillMount","remove","path","localStorage","removeItem","isValid","event","headers","Headers","preventDefault","defaults","withCredentials","then","data","setItem","email","major","pathname","catch","error","response","problem","window","location","name","render","redirectVar"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport swal from \"sweetalert\";\nimport axios from \"axios\";\nimport { Redirect } from \"react-router-dom\";\nimport cookie from \"react-cookies\";\n\nimport SigninAction from \"../../Actions/SigninAction\";\nimport TextFieldGroup from \"./TextFieldGroup\";\nimport validateSigninInput from \"./validateSigninInput\";\n\nclass Signinform extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      identifier: \"\",\n      password: \"\",\n      errors: {},\n      isLoading: false,\n      selectedOption: \"company\",\n      authFlag: false,\n      redirector: null\n    };\n\n    this.onSubmit = this.onSubmit.bind(this);\n    this.onChange = this.onChange.bind(this);\n    this.handleOptionChange = this.handleOptionChange.bind(this);\n    //constructor\n  }\n\n  //Call the Will Mount to set the auth Flag to false\n  componentWillMount() {\n    this.setState({\n      authFlag: false\n    });\n    if (cookie) {\n      cookie.remove(\"cookie\", { path: \"/\" });\n      localStorage.removeItem(\"email\");\n      localStorage.removeItem(\"role\");\n    }\n  }\n\n  isValid() {\n    let { errors, isValid } = validateSigninInput(this.state);\n    if (!isValid) {\n      this.setState(({ errors } = validateSigninInput(this.state)));\n    }\n    return isValid;\n  }\n\n  onSubmit(event) {\n    var headers = new Headers();\n    event.preventDefault();\n    if (this.isValid()) {\n      axios.defaults.withCredentials = true;\n      this.setState({ errors: {}, isLoading: true });\n      this.props\n        .SigninAction(this.state)\n        .then(data => {\n          this.setState({\n            authFlag: true\n          });\n          localStorage.setItem(\"email\", data.data.email);\n          if (data.data.selectedOption === \"student\") {\n            localStorage.setItem(\"role\", \"student\");\n            localStorage.setItem(\"major\", data.data.major);\n            swal(\"\", \"Sign-in Successful\", \"success\").then(() => {\n              this.setState({\n                redirector: (\n                  <Redirect\n                    to={{\n                      pathname:\n                        \"/StudentDashboard/Main/StudentJobSearch/Pages/StudentJobSearch\"\n                    }}\n                  />\n                )\n              });\n            });\n          } else {\n            swal(\"\", \"Sign-in Successful\", \"success\").then(() => {\n              localStorage.setItem(\"role\", \"company\");\n              this.setState({\n                redirector: (\n                  <Redirect\n                    to={{\n                      pathname:\n                        \"/CompanyDashboard/CompDashboard/Pages/CompDashboard\"\n                    }}\n                  />\n                )\n              });\n            });\n          }\n        })\n        //then\n        .catch(error => {\n          if (error.response.data.problem === \"password\") {\n            this.setState({\n              authFlag: false\n            });\n            swal(\"Error\", \"Wrong Password!!!Try again\", \"error\").then(() => {\n              //window.location = \"/Signin/Pages/Signin\";\n              this.setState({\n                redirector: (\n                  <Redirect\n                    to={{\n                      pathname: \"/Signin/Pages/Signin\"\n                    }}\n                  />\n                )\n              });\n            });\n          } else if (error.response.data.problem === \"username\") {\n            this.setState({\n              authFlag: false\n            });\n            swal(\"Error\", \"Username is incorrect!!! Try again\", \"error\").then(\n              () => {\n                //window.location = \"/Signin/Pages/Signin\";\n                this.setState({\n                  redirector: (\n                    <Redirect\n                      to={{\n                        pathname: \"/Signin/Pages/Signin\"\n                      }}\n                    />\n                  )\n                });\n              }\n            );\n          } else {\n            this.setState({\n              authFlag: false\n            });\n            swal(\n              \"Error\",\n              \"Some Error Occured.. Please try again\",\n              \"error\"\n            ).then(() => {\n              window.location = \"/Signin/Pages/Signin\";\n            });\n          }\n        });\n      //catch\n\n      //if\n    }\n    //function\n  }\n\n  onChange(event) {\n    this.setState({ [event.target.name]: event.target.value });\n  }\n\n  handleOptionChange = changeEvent => {\n    this.setState({\n      selectedOption: changeEvent.target.value\n    });\n  };\n\n  render() {\n    let redirectVar = null;\n\n    let { errors, identifier, password, isLoading } = this.state;\n    return (\n      <div>\n        {this.state.redirector}\n        <form onSubmit={this.onSubmit} className=\"login\">\n          <h1 align=\"center\"> Sign-In </h1>\n\n          <TextFieldGroup\n            field=\"identifier\"\n            label=\"Username/Email\"\n            value={identifier}\n            error={errors.identifier}\n            onChange={this.onChange}\n          />\n\n          <TextFieldGroup\n            field=\"password\"\n            label=\"Password\"\n            value={password}\n            error={errors.password}\n            onChange={this.onChange}\n            type=\"password\"\n          />\n\n          <div className=\"form-group\">\n            <button\n              disabled={this.state.isLoading}\n              type=\"submit\"\n              name=\"Submit\"\n              className=\"btn btn-primary btn-lg\"\n            >\n              <b>Login</b>\n            </button>\n          </div>\n          <div className=\"form-check\">\n            <input\n              type=\"radio\"\n              id=\"company\"\n              name=\"loginuser\"\n              value=\"company\"\n              className=\"form-check-input\"\n              checked={this.state.selectedOption === \"company\"}\n              onChange={this.handleOptionChange}\n            />\n            <label for=\"company\">Company Login</label>\n            <input\n              type=\"radio\"\n              id=\"student\"\n              name=\"loginuser\"\n              value=\"student\"\n              className=\"form-check-input\"\n              checked={this.state.selectedOption === \"student\"}\n              onChange={this.handleOptionChange}\n            />\n            <label for=\"student\">Student Login</label>\n            <br />\n          </div>\n        </form>\n      </div>\n      //return\n    );\n\n    //render\n  }\n\n  //class\n}\n\nexport default connect(null, { SigninAction })(Signinform);\n"]},"metadata":{},"sourceType":"module"}