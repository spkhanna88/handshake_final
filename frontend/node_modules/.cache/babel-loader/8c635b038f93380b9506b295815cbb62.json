{"ast":null,"code":"const jwt = require(\"jsonwebtoken\");\n\nmodule.exports = (req, res, next) => {\n  try {\n    const token = req.headers.Authorization.split(\" \")[1];\n\n    if (!token) {\n      console.log(\"Authentication failed due to token\");\n    }\n\n    const decodedToken = jwt.verify(token, \"SUPERSECRETPIN\"); ///Payload\n\n    req.userData = {\n      userID: decodedToken.email\n    };\n    next();\n  } catch (err) {\n    res.status(401).send({\n      problem: authfailedtoken\n    });\n  }\n};","map":{"version":3,"sources":["/Users/surbhi/Documents/STUDY/CMPE273/Projects/Handshake/backend/middleware/check-auth.js"],"names":["jwt","require","module","exports","req","res","next","token","headers","Authorization","split","console","log","decodedToken","verify","userData","userID","email","err","status","send","problem","authfailedtoken"],"mappings":"AAAA,MAAMA,GAAG,GAAGC,OAAO,CAAC,cAAD,CAAnB;;AAEAC,MAAM,CAACC,OAAP,GAAiB,CAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,KAAoB;AACnC,MAAI;AACF,UAAMC,KAAK,GAAGH,GAAG,CAACI,OAAJ,CAAYC,aAAZ,CAA0BC,KAA1B,CAAgC,GAAhC,EAAqC,CAArC,CAAd;;AACA,QAAI,CAACH,KAAL,EAAY;AACVI,MAAAA,OAAO,CAACC,GAAR,CAAY,oCAAZ;AACD;;AACD,UAAMC,YAAY,GAAGb,GAAG,CAACc,MAAJ,CAAWP,KAAX,EAAkB,gBAAlB,CAArB,CALE,CAKwD;;AAC1DH,IAAAA,GAAG,CAACW,QAAJ,GAAe;AAAEC,MAAAA,MAAM,EAAEH,YAAY,CAACI;AAAvB,KAAf;AACAX,IAAAA,IAAI;AACL,GARD,CAQE,OAAOY,GAAP,EAAY;AACZb,IAAAA,GAAG,CAACc,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,MAAAA,OAAO,EAAEC;AAAX,KAArB;AACD;AACF,CAZD","sourcesContent":["const jwt = require(\"jsonwebtoken\");\n\nmodule.exports = (req, res, next) => {\n  try {\n    const token = req.headers.Authorization.split(\" \")[1];\n    if (!token) {\n      console.log(\"Authentication failed due to token\");\n    }\n    const decodedToken = jwt.verify(token, \"SUPERSECRETPIN\"); ///Payload\n    req.userData = { userID: decodedToken.email };\n    next();\n  } catch (err) {\n    res.status(401).send({ problem: authfailedtoken });\n  }\n};\n"]},"metadata":{},"sourceType":"script"}