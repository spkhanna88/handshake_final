{"ast":null,"code":"//dependencies\nvar express = require(\"express\");\n\nvar app = express();\n\nvar bodyParser = require(\"body-parser\");\n\nvar session = require(\"express-session\");\n\nvar cookieParser = require(\"cookie-parser\");\n\nvar cors = require(\"cors\");\n\nconst bcrypt = require(\"bcryptjs\");\n\nconst jwt = require(\"jsonwebtoken\");\n\nvar Validator = require(\"validator\"); //const { check, validationResult } = require(\"express-validator\");\n\n\nvar isEmpty = require(\"lodash/isEmpty\");\n\nconst mysql = require(\"mysql\");\n\nvar db = require(\"./dbseed\"); /////Validator//////\n\n\nvar validateCompanySignupInput = require(\"./Validators/validateCompanySignupInput.js\");\n\nvar validateUserSignupInput = require(\"./Validators/validateUserSignupInput\"); //use cors to allow cross origin resource sharing\n\n\napp.use(cors({\n  origin: \"http://localhost:3000\",\n  credentials: true\n}));\napp.use(session({\n  secret: \"cmpe273_kafka_passport_mongo\",\n  resave: false,\n  // Forces the session to be saved back to the session store, even if the session was never modified during the request\n  saveUninitialized: false,\n  // Force to save uninitialized session to db. A session is uninitialized when it is new but not modified.\n  duration: 60 * 60 * 1000,\n  // Overall duration of Session : 30 minutes : 1800 seconds\n  activeDuration: 5 * 60 * 1000\n}));\napp.use(bodyParser.urlencoded({\n  extended: true\n}));\napp.use(bodyParser.json()); //Allow Access Control\n\napp.use(function (req, res, next) {\n  res.setHeader(\"Access-Control-Allow-Origin\", \"http://localhost:3000\");\n  res.setHeader(\"Access-Control-Allow-Credentials\", \"true\");\n  res.setHeader(\"Access-Control-Allow-Methods\", \"GET,HEAD,OPTIONS,POST,PUT,DELETE\");\n  res.setHeader(\"Access-Control-Allow-Headers\", \"Access-Control-Allow-Headers, Origin,Accept, X-Requested-With, Content-Type, Access-Control-Request-Method, Access-Control-Request-Headers\");\n  res.setHeader(\"Cache-Control\", \"no-cache\");\n  next();\n}); ///////Routes///////\n\nconst companysignup = require(\"./Routes/companysignup\");\n\napp.use(companysignup);\n\nconst studentsignup = require(\"./Routes/studentsignup\");\n\napp.use(studentsignup);\n\nconst signin = require(\"./Routes/Signin\");\n\napp.use(signin);\n\nconst getStudentBasicDetail = require(\"./Routes/getStudentBasicDetail\");\n\napp.use(getStudentBasicDetail);\n\nconst saveStudentBasicDetail = require(\"./Routes/saveStudentBasicDetail\");\n\napp.use(saveStudentBasicDetail);\n\nconst saveStudentEduDetail = require(\"./Routes/saveStudentEduDetail\");\n\napp.use(saveStudentEduDetail);\n\nconst getStudentEduDetail = require(\"./Routes/getStudentEduDetail\");\n\napp.use(getStudentEduDetail);\n\nconst getStudentCmpDetail = require(\"./Routes/getStudentCmpDetail.js\");\n\napp.use(getStudentCmpDetail);\n\nconst saveStudentCmpDetail = require(\"./Routes/saveStudentCmpDetail\");\n\napp.use(saveStudentCmpDetail);\n\nconst saveCompProfile = require(\"./Routes/saveCompProfile\");\n\napp.use(saveCompProfile);\n\nconst viewCompProfile = require(\"./Routes/viewCompProfile\");\n\napp.use(viewCompProfile);\n\nconst uploadCompanyPicture = require(\"./Routes/uploadCompanyPicture\");\n\napp.use(uploadCompanyPicture); //start your server on port 4001\n\napp.listen(4001);\nconsole.log(\"Server Listening on port 4001\");","map":{"version":3,"sources":["/Users/surbhi/Documents/STUDY/CMPE273/Projects/Handshake/backend/index.js"],"names":["express","require","app","bodyParser","session","cookieParser","cors","bcrypt","jwt","Validator","isEmpty","mysql","db","validateCompanySignupInput","validateUserSignupInput","use","origin","credentials","secret","resave","saveUninitialized","duration","activeDuration","urlencoded","extended","json","req","res","next","setHeader","companysignup","studentsignup","signin","getStudentBasicDetail","saveStudentBasicDetail","saveStudentEduDetail","getStudentEduDetail","getStudentCmpDetail","saveStudentCmpDetail","saveCompProfile","viewCompProfile","uploadCompanyPicture","listen","console","log"],"mappings":"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","sourcesContent":["//dependencies\nvar express = require(\"express\");\nvar app = express();\nvar bodyParser = require(\"body-parser\");\nvar session = require(\"express-session\");\nvar cookieParser = require(\"cookie-parser\");\nvar cors = require(\"cors\");\nconst bcrypt = require(\"bcryptjs\");\nconst jwt = require(\"jsonwebtoken\");\nvar Validator = require(\"validator\");\n//const { check, validationResult } = require(\"express-validator\");\n\nvar isEmpty = require(\"lodash/isEmpty\");\nconst mysql = require(\"mysql\");\nvar db = require(\"./dbseed\");\n/////Validator//////\nvar validateCompanySignupInput = require(\"./Validators/validateCompanySignupInput.js\");\nvar validateUserSignupInput = require(\"./Validators/validateUserSignupInput\");\n\n//use cors to allow cross origin resource sharing\napp.use(cors({ origin: \"http://localhost:3000\", credentials: true }));\n\napp.use(\n  session({\n    secret: \"cmpe273_kafka_passport_mongo\",\n    resave: false, // Forces the session to be saved back to the session store, even if the session was never modified during the request\n    saveUninitialized: false, // Force to save uninitialized session to db. A session is uninitialized when it is new but not modified.\n    duration: 60 * 60 * 1000, // Overall duration of Session : 30 minutes : 1800 seconds\n    activeDuration: 5 * 60 * 1000\n  })\n);\n\napp.use(\n  bodyParser.urlencoded({\n    extended: true\n  })\n);\napp.use(bodyParser.json());\n\n//Allow Access Control\napp.use(function(req, res, next) {\n  res.setHeader(\"Access-Control-Allow-Origin\", \"http://localhost:3000\");\n  res.setHeader(\"Access-Control-Allow-Credentials\", \"true\");\n  res.setHeader(\n    \"Access-Control-Allow-Methods\",\n    \"GET,HEAD,OPTIONS,POST,PUT,DELETE\"\n  );\n  res.setHeader(\n    \"Access-Control-Allow-Headers\",\n    \"Access-Control-Allow-Headers, Origin,Accept, X-Requested-With, Content-Type, Access-Control-Request-Method, Access-Control-Request-Headers\"\n  );\n  res.setHeader(\"Cache-Control\", \"no-cache\");\n  next();\n});\n\n///////Routes///////\nconst companysignup = require(\"./Routes/companysignup\");\napp.use(companysignup);\n\nconst studentsignup = require(\"./Routes/studentsignup\");\napp.use(studentsignup);\n\nconst signin = require(\"./Routes/Signin\");\napp.use(signin);\n\nconst getStudentBasicDetail = require(\"./Routes/getStudentBasicDetail\");\napp.use(getStudentBasicDetail);\n\nconst saveStudentBasicDetail = require(\"./Routes/saveStudentBasicDetail\");\napp.use(saveStudentBasicDetail);\n\nconst saveStudentEduDetail = require(\"./Routes/saveStudentEduDetail\");\napp.use(saveStudentEduDetail);\n\nconst getStudentEduDetail = require(\"./Routes/getStudentEduDetail\");\napp.use(getStudentEduDetail);\n\nconst getStudentCmpDetail = require(\"./Routes/getStudentCmpDetail.js\");\napp.use(getStudentCmpDetail);\n\nconst saveStudentCmpDetail = require(\"./Routes/saveStudentCmpDetail\");\napp.use(saveStudentCmpDetail);\n\nconst saveCompProfile = require(\"./Routes/saveCompProfile\");\napp.use(saveCompProfile);\n\nconst viewCompProfile = require(\"./Routes/viewCompProfile\");\napp.use(viewCompProfile);\n\nconst uploadCompanyPicture = require(\"./Routes/uploadCompanyPicture\");\napp.use(uploadCompanyPicture);\n\n//start your server on port 4001\napp.listen(4001);\nconsole.log(\"Server Listening on port 4001\");\n"]},"metadata":{},"sourceType":"script"}