{"ast":null,"code":"var express = require(\"express\");\n\nvar app = express();\nconst router = express.Router();\n\nvar bodyParser = require(\"body-parser\");\n\nvar session = require(\"express-session\");\n\nvar cookieParser = require(\"cookie-parser\");\n\nvar Validator = require(\"validator\");\n\nvar isEmpty = require(\"lodash/isEmpty\");\n\nconst mysql = require(\"mysql\");\n\nvar isEmpty = require(\"lodash/isEmpty\");\n\nconst bcrypt = require(\"bcryptjs\"); //const jwt = require(\"jsonwebtoken\");\n\n\nvar validateCompanySignupInput = require(\"../Validators/validateCompanySignupInput\");\n\nvar db = require(\"../dbseed\");\n\nrouter.post(\"/companysignup\", async function (req, res, next) {\n  const {\n    errors,\n    isValid\n  } = validateCompanySignupInput(req.body);\n\n  if (!isValid) {\n    console.log(typeof errors);\n    res.status(400).send(errors);\n  } else {\n    console.log(\"companysignuprequest received\");\n    var encryptedPassword;\n\n    try {\n      encryptedPassword = await bcrypt.hash(req.body.password, 12);\n      console.log(encryptedPassword);\n    } catch (err) {\n      console.log(\"error with encryption\");\n    }\n\n    var sql = `INSERT INTO CompanyData (companyname, email, password, location) VALUES('${req.body.companyname}','${req.body.email}','${encryptedPassword}','${req.body.location}')`;\n    db.query(sql, (err, rows, fields) => {\n      if (err) {\n        res.status(400).send(\"User ID/EMAIL already exist\");\n      } else {\n        // let token;\n        // try {\n        //   token = jwt.sign({ email: req.body.email }, \"SUPERSECRETPIN\", {\n        //     expiresIn: \"1h\"\n        //   });\n        // } catch {\n        //   console.log(\"error occured with token\");\n        //   res.send(400).send({ problem: token });\n        // }\n        console.log(\"1 record inserted\");\n        res.status(200).send({\n          success: true\n        }); // res.status(200).send({ email: req.body.email, token: token });\n      }\n    }); //else\n  } //main function\n\n});\nmodule.exports = router;","map":{"version":3,"sources":["/Users/surbhi/Documents/STUDY/CMPE273/Projects/Handshake/backend/Routes/companysignup.js"],"names":["express","require","app","router","Router","bodyParser","session","cookieParser","Validator","isEmpty","mysql","bcrypt","validateCompanySignupInput","db","post","req","res","next","errors","isValid","body","console","log","status","send","encryptedPassword","hash","password","err","sql","companyname","email","location","query","rows","fields","success","module","exports"],"mappings":"AAAA,IAAIA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAArB;;AACA,IAAIC,GAAG,GAAGF,OAAO,EAAjB;AACA,MAAMG,MAAM,GAAGH,OAAO,CAACI,MAAR,EAAf;;AACA,IAAIC,UAAU,GAAGJ,OAAO,CAAC,aAAD,CAAxB;;AACA,IAAIK,OAAO,GAAGL,OAAO,CAAC,iBAAD,CAArB;;AACA,IAAIM,YAAY,GAAGN,OAAO,CAAC,eAAD,CAA1B;;AACA,IAAIO,SAAS,GAAGP,OAAO,CAAC,WAAD,CAAvB;;AACA,IAAIQ,OAAO,GAAGR,OAAO,CAAC,gBAAD,CAArB;;AACA,MAAMS,KAAK,GAAGT,OAAO,CAAC,OAAD,CAArB;;AACA,IAAIQ,OAAO,GAAGR,OAAO,CAAC,gBAAD,CAArB;;AACA,MAAMU,MAAM,GAAGV,OAAO,CAAC,UAAD,CAAtB,C,CACA;;;AAEA,IAAIW,0BAA0B,GAAGX,OAAO,CAAC,0CAAD,CAAxC;;AACA,IAAIY,EAAE,GAAGZ,OAAO,CAAC,WAAD,CAAhB;;AAEAE,MAAM,CAACW,IAAP,CAAY,gBAAZ,EAA8B,gBAAeC,GAAf,EAAoBC,GAApB,EAAyBC,IAAzB,EAA+B;AAC3D,QAAM;AAAEC,IAAAA,MAAF;AAAUC,IAAAA;AAAV,MAAsBP,0BAA0B,CAACG,GAAG,CAACK,IAAL,CAAtD;;AACA,MAAI,CAACD,OAAL,EAAc;AACZE,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAOJ,MAAnB;AACAF,IAAAA,GAAG,CAACO,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBN,MAArB;AACD,GAHD,MAGO;AACLG,IAAAA,OAAO,CAACC,GAAR,CAAY,+BAAZ;AACA,QAAIG,iBAAJ;;AACA,QAAI;AACFA,MAAAA,iBAAiB,GAAG,MAAMd,MAAM,CAACe,IAAP,CAAYX,GAAG,CAACK,IAAJ,CAASO,QAArB,EAA+B,EAA/B,CAA1B;AACAN,MAAAA,OAAO,CAACC,GAAR,CAAYG,iBAAZ;AACD,KAHD,CAGE,OAAOG,GAAP,EAAY;AACZP,MAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ;AACD;;AACD,QAAIO,GAAG,GAAI,4EAA2Ed,GAAG,CAACK,IAAJ,CAASU,WAAY,MAAKf,GAAG,CAACK,IAAJ,CAASW,KAAM,MAAKN,iBAAkB,MAAKV,GAAG,CAACK,IAAJ,CAASY,QAAS,IAA7K;AAEAnB,IAAAA,EAAE,CAACoB,KAAH,CAASJ,GAAT,EAAc,CAACD,GAAD,EAAMM,IAAN,EAAYC,MAAZ,KAAuB;AACnC,UAAIP,GAAJ,EAAS;AACPZ,QAAAA,GAAG,CAACO,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,6BAArB;AACD,OAFD,MAEO;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAH,QAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACAN,QAAAA,GAAG,CAACO,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEY,UAAAA,OAAO,EAAE;AAAX,SAArB,EAXK,CAYL;AACD;AACF,KAjBD,EAXK,CA6BL;AACD,GAnC0D,CAoC3D;;AACD,CArCD;AAuCAC,MAAM,CAACC,OAAP,GAAiBnC,MAAjB","sourcesContent":["var express = require(\"express\");\nvar app = express();\nconst router = express.Router();\nvar bodyParser = require(\"body-parser\");\nvar session = require(\"express-session\");\nvar cookieParser = require(\"cookie-parser\");\nvar Validator = require(\"validator\");\nvar isEmpty = require(\"lodash/isEmpty\");\nconst mysql = require(\"mysql\");\nvar isEmpty = require(\"lodash/isEmpty\");\nconst bcrypt = require(\"bcryptjs\");\n//const jwt = require(\"jsonwebtoken\");\n\nvar validateCompanySignupInput = require(\"../Validators/validateCompanySignupInput\");\nvar db = require(\"../dbseed\");\n\nrouter.post(\"/companysignup\", async function(req, res, next) {\n  const { errors, isValid } = validateCompanySignupInput(req.body);\n  if (!isValid) {\n    console.log(typeof errors);\n    res.status(400).send(errors);\n  } else {\n    console.log(\"companysignuprequest received\");\n    var encryptedPassword;\n    try {\n      encryptedPassword = await bcrypt.hash(req.body.password, 12);\n      console.log(encryptedPassword);\n    } catch (err) {\n      console.log(\"error with encryption\");\n    }\n    var sql = `INSERT INTO CompanyData (companyname, email, password, location) VALUES('${req.body.companyname}','${req.body.email}','${encryptedPassword}','${req.body.location}')`;\n\n    db.query(sql, (err, rows, fields) => {\n      if (err) {\n        res.status(400).send(\"User ID/EMAIL already exist\");\n      } else {\n        // let token;\n        // try {\n        //   token = jwt.sign({ email: req.body.email }, \"SUPERSECRETPIN\", {\n        //     expiresIn: \"1h\"\n        //   });\n        // } catch {\n        //   console.log(\"error occured with token\");\n        //   res.send(400).send({ problem: token });\n        // }\n        console.log(\"1 record inserted\");\n        res.status(200).send({ success: true });\n        // res.status(200).send({ email: req.body.email, token: token });\n      }\n    });\n    //else\n  }\n  //main function\n});\n\nmodule.exports = router;\n"]},"metadata":{},"sourceType":"script"}